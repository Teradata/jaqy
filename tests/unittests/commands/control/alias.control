Jaqy Console 1.1.0
-- 0/0 - 0 ----------------------------------------------------------------
--------------------------------------------------------------------------
-- .alias command test
--------------------------------------------------------------------------
.run ../common/sqlite_setup.sql
-- Running script: ../common/sqlite_setup.sql
-- 0/1 - 0 ----------------------------------------------------------------
.help alias
usage:
    .alias name
    string
    .end alias

This command creates an alias for a series commands or SQL queries.  The
alias is run like a command.  It also has a limited support for alias
arguments.

Arguments:
$0, $1 $2 etc corresponds to n-th argument passed to the alias.
$(1-) corresponds to all arguments after 1 (including 1).
$(2-3) corresponds to all arguments between 2 and 3 (inclusive).

Examples:
-- .quit would exit Jaqy.
.alias quit
.exit
.end alias

-- creates a shortcut alias for insertion.
-- .ins MyTable 1, 1
.alias ins
INSERT INTO $0 VALUES ($(1-));
.end alias

-- 0/2 - 0 ----------------------------------------------------------------
.alias
.alias quit
.@exit
.end alias
-- 0/3 - 0 ----------------------------------------------------------------

.format csv
-- 0/4 - 0 ----------------------------------------------------------------
.open sqlite::memory:
-- 0/5 - 0 ----------------------------------------------------------------

CREATE TABLE MyTable (a INTEGER, b TEXT);
-- success. update count = 0
-- 1/5 - 0 ----------------------------------------------------------------

-- creates an alias that insert two rows
-- because comma is part of the arguments, we need to be careful
.alias ins
INSERT INTO $0 VALUES ($(1-));
INSERT INTO $0 VALUES (1 + $(1) $(2));
.end alias
-- 1/6 - 0 ----------------------------------------------------------------

.alias
.alias ins
INSERT INTO $0 VALUES ($(1-));
INSERT INTO $0 VALUES (1 + $(1) $(2));
.end alias
.alias quit
.@exit
.end alias
-- 1/7 - 0 ----------------------------------------------------------------

.ins MyTable 0, NULL
-- 1/8 - 0 ----------------------------------------------------------------
INSERT INTO MyTable VALUES (0, NULL);
-- success. update count = 1
-- 2/8 - 0 ----------------------------------------------------------------
INSERT INTO MyTable VALUES (1 + 0, NULL);
-- success. update count = 1
-- 3/8 - 0 ----------------------------------------------------------------
.ins MyTable 2, 'POINT(EMPTY)'
-- 3/9 - 0 ----------------------------------------------------------------
INSERT INTO MyTable VALUES (2, 'POINT(EMPTY)');
-- success. update count = 1
-- 4/9 - 0 ----------------------------------------------------------------
INSERT INTO MyTable VALUES (1 + 2, 'POINT(EMPTY)');
-- success. update count = 1
-- 5/9 - 0 ----------------------------------------------------------------
.ins MyTable 4, 'POINT(1 1)'
-- 5/10 - 0 ---------------------------------------------------------------
INSERT INTO MyTable VALUES (4, 'POINT(1 1)');
-- success. update count = 1
-- 6/10 - 0 ---------------------------------------------------------------
INSERT INTO MyTable VALUES (1 + 4, 'POINT(1 1)');
-- success. update count = 1
-- 7/10 - 0 ---------------------------------------------------------------
.ins MyTable 6, 'LINESTRING(1 1, 3 3)'
-- 7/11 - 0 ---------------------------------------------------------------
INSERT INTO MyTable VALUES (6, 'LINESTRING(1 1, 3 3)');
-- success. update count = 1
-- 8/11 - 0 ---------------------------------------------------------------
INSERT INTO MyTable VALUES (1 + 6, 'LINESTRING(1 1, 3 3)');
-- success. update count = 1
-- 9/11 - 0 ---------------------------------------------------------------
.ins MyTable 8, 'This is a test.'
-- 9/12 - 0 ---------------------------------------------------------------
INSERT INTO MyTable VALUES (8, 'This is a test.');
-- success. update count = 1
-- 10/12 - 0 --------------------------------------------------------------
INSERT INTO MyTable VALUES (1 + 8, 'This is a test.');
-- success. update count = 1
-- 11/12 - 0 --------------------------------------------------------------

SELECT * FROM MyTable ORDER BY a;
-- success --
a,b
0,
1,
2,POINT(EMPTY)
3,POINT(EMPTY)
4,POINT(1 1)
5,POINT(1 1)
6,"LINESTRING(1 1, 3 3)"
7,"LINESTRING(1 1, 3 3)"
8,This is a test.
9,This is a test.
-- activity count = 10
-- 12/12 - 0 --------------------------------------------------------------

DROP TABLE MyTable;
-- success. update count = 1
-- 13/12 - 0 --------------------------------------------------------------

.end asdf`13554
-- error: nothing to end.
-- 13/13 - 0 --------------------------------------------------------------
.close
-- 13/14 - 0 --------------------------------------------------------------

