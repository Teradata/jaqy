Jaqy Console 1.2.0
-- 0/0 - 0 ----------------------------------------------------------------
--------------------------------------------------------------------------
-- .import related commands test
--------------------------------------------------------------------------
.help import
usage: .import [type] [type options] [path]
type:
  avro
  csv
  json
  pipe

avro type options:


csv type options:
  -c,--charset <arg>                                    sets the file
                                                        character set
  -d,--delimiter <arg>                                  specifies the
                                                        delimiter
  -e,--encoding <arg>                                   specifies the external
                                                        file character set
  -f,--nafilter                                         enables N/A value
                                                        filtering
  -h,--header                                           indicates the file has
                                                        a header
  -j,--clob <arg>                                       specifies the external
                                                        text file column
  -k,--blob <arg>                                       specifies the external
                                                        binary file column
  -p,--precise                                          Obtain precise decimal
                                                        points if possible.
                                                        This option is only
                                                        meaningful in
                                                        generating a table
                                                        schema.  By default,
                                                        floating values are
                                                        treated as DOUBLE
                                                        PRECISION.
  -r,--rowthreshold <arg>                               sets row threshold in
                                                        schema determination.
  -t,--type <default | excel | rfc4180 | mysql | tdf>   sets the csv type.
  -v,--navalues <arg>                                   specifies a comma
                                                        delimited list of N/A
                                                        values.  If it is not
                                                        specified and
                                                        --nafilter is enabled,
                                                        then the default list
                                                        is used.

json type options:
  -a,--array                   treats BSON root document as array.
  -b,--binary <base64 | hex>   sets the binary format.
  -c,--charset <arg>           sets the file character set
  -f,--format <text | bson>    sets the JSON format.
  -r,--rowexp <arg>            sets the row expression

pipe type options:


-- 0/1 - 0 ----------------------------------------------------------------
.help importschema
usage: .importschema [options]
options:
  -s,--sql   display schema in SQL

-- 0/2 - 0 ----------------------------------------------------------------
.help importtable
usage: .importtable [tablename]
-- 0/3 - 0 ----------------------------------------------------------------
.import
No current imports.
-- 0/4 - 0 ----------------------------------------------------------------
.importschema
-- error: There is no current import.
-- 0/5 - 0 ----------------------------------------------------------------
.importtable
-- error: There is no current import.
-- 0/6 - 0 ----------------------------------------------------------------
.importtable MyTable2
-- error: There is no current import.
-- 0/7 - 0 ----------------------------------------------------------------

.run ../common/sqlite_setup.sql
-- Running script: ../common/sqlite_setup.sql
-- 0/8 - 0 ----------------------------------------------------------------
.open sqlite::memory:
-- 0/9 - 0 ----------------------------------------------------------------

CREATE TABLE MyTable(a INTEGER PRIMARY KEY, b VARCHAR(200), c VARCHAR(200), d BLOB);
-- success. update count = 0
-- 1/9 - 0 ----------------------------------------------------------------

INSERT INTO MyTable VALUES (1, 'abc', 'def', X'deadbeef');
-- success. update count = 1
-- 2/9 - 0 ----------------------------------------------------------------
INSERT INTO MyTable VALUES (2, 'john', 'doe', null);
-- success. update count = 1
-- 3/9 - 0 ----------------------------------------------------------------
INSERT INTO MyTable VALUES (3, 'a"b', 'c"d', X'deadbeef');
-- success. update count = 1
-- 4/9 - 0 ----------------------------------------------------------------
INSERT INTO MyTable VALUES (4, 'a,b', 'c,d', X'deadbeef');
-- success. update count = 1
-- 5/9 - 0 ----------------------------------------------------------------
INSERT INTO MyTable VALUES (5, 'a''b', 'c''d', X'deadbeef');
-- success. update count = 1
-- 6/9 - 0 ----------------------------------------------------------------
INSERT INTO MyTable VALUES (6, 'a''",b', 'c''",d', X'deadbeef');
-- success. update count = 1
-- 7/9 - 0 ----------------------------------------------------------------
INSERT INTO MyTable VALUES (7, 'a	b', 'c,d', X'deadbeef');
-- success. update count = 1
-- 8/9 - 0 ----------------------------------------------------------------

.export csv file1.csv
-- 8/10 - 0 ---------------------------------------------------------------
SELECT * FROM MyTable ORDER BY a;
-- success --
-- activity count = 7
-- 9/10 - 0 ---------------------------------------------------------------
.importschema
-- error: There is no current import.
-- 9/11 - 0 ---------------------------------------------------------------
.importtable MyTable2
-- error: There is no current import.
-- 9/12 - 0 ---------------------------------------------------------------
.import csv -h file1.csv
-- 9/13 - 0 ---------------------------------------------------------------
.import
.import csv
-- 9/14 - 0 ---------------------------------------------------------------
.importtable MyTable2
-- Table Schema --
CREATE TABLE MyTable2
(
	a INTEGER NOT NULL,
	b TEXT NOT NULL,
	c TEXT NOT NULL,
	d TEXT
)
-- success. update count = 1
-- INSERTION --
INSERT INTO MyTable2 VALUES (?,?,?,?)
-- success. update count = 1
-- 11/15 - 0 --------------------------------------------------------------
SELECT * FROM MyTable2 ORDER BY a;
-- success --
a b     c     d
- ----- ----- --------
1 abc   def   deadbeef
2 john  doe   
3 a"b   c"d   deadbeef
4 a,b   c,d   deadbeef
5 a'b   c'd   deadbeef
6 a'",b c'",d deadbeef
7 a	b   c,d   deadbeef
-- activity count = 7
-- 12/15 - 0 --------------------------------------------------------------

.import csv -h file1.csv
-- 12/16 - 0 --------------------------------------------------------------
.importschema
Column Type    Nullable
------ ------- --------
a      INTEGER No
b      TEXT    No
c      TEXT    No
d      TEXT    Yes
-- 12/17 - 0 --------------------------------------------------------------
.importschema -s
CREATE TABLE TABLENAME
(
	a INTEGER NOT NULL,
	b TEXT NOT NULL,
	c TEXT NOT NULL,
	d TEXT
)
-- 12/18 - 0 --------------------------------------------------------------
.importtable
-- error: Staging table name is not specified.
-- 12/19 - 0 --------------------------------------------------------------
.importtable MyTable3
-- Table Schema --
CREATE TABLE MyTable3
(
	a INTEGER NOT NULL,
	b TEXT NOT NULL,
	c TEXT NOT NULL,
	d TEXT
)
-- success. update count = 1
-- INSERTION --
INSERT INTO MyTable3 VALUES (?,?,?,?)
-- success. update count = 1
-- 14/20 - 0 --------------------------------------------------------------
SELECT * FROM MyTable3 ORDER BY a;
-- success --
a b     c     d
- ----- ----- --------
1 abc   def   deadbeef
2 john  doe   
3 a"b   c"d   deadbeef
4 a,b   c,d   deadbeef
5 a'b   c'd   deadbeef
6 a'",b c'",d deadbeef
7 a	b   c,d   deadbeef
-- activity count = 7
-- 15/20 - 0 --------------------------------------------------------------

DROP TABLE MyTable;
-- success. update count = 1
-- 16/20 - 0 --------------------------------------------------------------
DROP TABLE MyTable2;
-- success. update count = 1
-- 17/20 - 0 --------------------------------------------------------------
DROP TABLE MyTable3;
-- success. update count = 1
-- 18/20 - 0 --------------------------------------------------------------

.close
-- 18/21 - 0 --------------------------------------------------------------
.os rm -f file1.csv
-- 18/22 - 0 --------------------------------------------------------------

